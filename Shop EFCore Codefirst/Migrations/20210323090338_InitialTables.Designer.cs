// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop_EFCore_Codefirst.Models;

namespace Shop_EFCore_Codefirst.Migrations
{
    [DbContext(typeof(ShopDBContext))]
    [Migration("20210323090338_InitialTables")]
    partial class InitialTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Shop_EFCore_Codefirst.Models.Command", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ValidationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Commands");
                });

            modelBuilder.Entity("Shop_EFCore_Codefirst.Models.CommandProduct", b =>
                {
                    b.Property<Guid>("CommandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CommandId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("CommandProducts");
                });

            modelBuilder.Entity("Shop_EFCore_Codefirst.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Shop_EFCore_Codefirst.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Shop_EFCore_Codefirst.Models.Command", b =>
                {
                    b.HasOne("Shop_EFCore_Codefirst.Models.Customer", "Customer")
                        .WithMany("Commands")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Shop_EFCore_Codefirst.Models.CommandProduct", b =>
                {
                    b.HasOne("Shop_EFCore_Codefirst.Models.Command", "Command")
                        .WithMany("CommandProducts")
                        .HasForeignKey("CommandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop_EFCore_Codefirst.Models.Product", "Product")
                        .WithMany("CommandProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Command");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Shop_EFCore_Codefirst.Models.Command", b =>
                {
                    b.Navigation("CommandProducts");
                });

            modelBuilder.Entity("Shop_EFCore_Codefirst.Models.Customer", b =>
                {
                    b.Navigation("Commands");
                });

            modelBuilder.Entity("Shop_EFCore_Codefirst.Models.Product", b =>
                {
                    b.Navigation("CommandProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
